name: compare-refdata

on:
  repository_dispatch:
    types: [compare-refdata-command]
  workflow_dispatch:
  push: # for testing
    branches:
    - '*'
  pull_request:
    branches:
    - '*'


env:
  PYTEST_FLAGS_COMPARE: --tardis-refdata=${{ github.workspace }}/tardis-refdata-gen --generate-reference
  # # original reference data
  # REF1_PATH: ${{ github.workspace }}/tardis-refdata/unit_test_data.h5
  # # generated reference data using the latest commit
  # REF2_PATH: ${{ github.workspace }}/tardis-refdata-gen/unit_test_data.h5


defaults:
  run:
    shell: bash -l {0}


jobs:
  build:
    if: github.repository_owner == 'tardis-sn'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: tardis-refdata/
          lfs: false

      - uses: actions/checkout@v3
        # if: ${{ github.event_name == 'workflow_dispatch' }} # for checking master
        with:
          repository: tardis-sn/tardis
          path: tardis/
      
      - run: tree ../ -L 3

      # - uses: actions/checkout@v3
      #   if: ${{ github.event_name == 'repository_dispatch' }} # for pull requests
      #   with:
      #     repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
      #     ref: ${{ github.event.client_payload.pull_request.head.ref }}
      
      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: tardis
            use-mamba: true
      
      - name: Update environment
        working-directory: tardis/
        run: mamba update -n tardis --file conda-linux-64.lock
        if: steps.cache-conda.outputs.cache-hit != 'true'
      
      - name: Install Bokeh
        run: conda install bokeh=2.2 --channel conda-forge --no-update-deps --yes
      
      - name: set upstream
        run: git remote add upstream $(git remote get-url origin)
      
      # - name: Install package
      #   working-directory: tardis/
      #   run: pip install -e .
    
      - name: Generate reference data for comparison
        working-directory: tardis/
        run: pytest tardis --tardis-refdata=../tardis-refdata --generate-reference
      
      
      - name: Compare Reference Data
        run: |
            jupyter nbconvert ref_data_compare.ipynb --to html --execute --ExecutePreprocessor.timeout=6000
      
      - run: tree ../ -L 3
      - name: Upload comparison notebook
        uses: actions/upload-artifact@v2
        with:
          name: Comparison Notebook
          path: tardis-refdata/notebooks/ref_data_compare_from_paths.html
      
      - name: Check if reference data are equal
        run: if [ "$(cat ../refdata_compare_result)" == "REFDATA COMPARISON FAILED" ]; then exit 1; fi


